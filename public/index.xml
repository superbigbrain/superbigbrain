<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bandit</title>
    <link>http://example.org/</link>
    <description>Recent content on Bandit</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 08 Oct 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>An Overview of Information Retrieval</title>
      <link>http://example.org/blog-information-retrieval/</link>
      <pubDate>Thu, 08 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/blog-information-retrieval/</guid>
      <description>Key Ideas and Themes Analysis Making text searchable. Lemmatization, stemming, stop words, and tokenization.
Indexing Mapping terms to documents. Inverted index. Dictionaries and postings lists. Index compression and updates.
Retrieval Finding relevant documents. Querying and ranking. Boolean and vector space models.
Evaluation Measuring success. Effectiveness and efficiency. Precision and recall.
Questions  What are the key ideas in this field? What are the common themes in this field? What are the open problems in this field?</description>
    </item>
    
    <item>
      <title>Building Knowledge</title>
      <link>http://example.org/knowledge/</link>
      <pubDate>Thu, 08 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/knowledge/</guid>
      <description>There are a lot of things I don&amp;rsquo;t know. I&amp;rsquo;d like to learn those things. But how do you learn something effectively? How do you teach yourself?
Topics  Information Retrieval Natural Language Processing High-Performance Software Distributed Systems  Goals  Learn to think original thoughts. Learn to synthesize knowledge. Learn to argue the other side. Learn to reason from first principles. Learn to find high-quality sources. Learn to remember what I read.</description>
    </item>
    
    <item>
      <title>Indexing</title>
      <link>http://example.org/guides/information-retrieval/indexing/</link>
      <pubDate>Thu, 08 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/guides/information-retrieval/indexing/</guid>
      <description>&amp;hellip;
 &amp;larr; Previous: Text Analysis   </description>
    </item>
    
    <item>
      <title>Text Analysis</title>
      <link>http://example.org/guides/information-retrieval/text-analysis/</link>
      <pubDate>Thu, 08 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/guides/information-retrieval/text-analysis/</guid>
      <description>&amp;hellip;
 &amp;larr; Previous: Introduction   Next: Indexing &amp;rarr;   </description>
    </item>
    
    <item>
      <title>Autocomplete in Depth</title>
      <link>http://example.org/autocomplete-in-depth/</link>
      <pubDate>Mon, 05 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/autocomplete-in-depth/</guid>
      <description>Autocomplete is annoying.
What types of searches can autocomplete help with?
 When the query is a genre. When the query is a language. When the query is a cast member. When the query is a production company. When the query is a country. When the query is an IMDB ID. When the query is a keyword. When the query is a movie title.  What are the different approaches to autocomplete?</description>
    </item>
    
  </channel>
</rss>